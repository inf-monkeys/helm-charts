apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
{{ include "monkey-tools-vllm.ud.annotations" . | indent 4 }}
    descriptions: vllm-server
  labels:
{{- include "monkey-tools-vllm.labels" . | nindent 4 }}
    component: vllm-server
{{ include "monkey-tools-vllm.ud.labels" . | indent 4 }}
  name: {{ template "monkey-tools-vllm.vllm-server.fullname" . }}
spec:
  serviceName: "{{ template "monkey-tools-vllm.vllm-server.fullname" . }}-service"
  replicas: {{ .Values.vllmServer.replicas }}
  selector:
    matchLabels:
{{- include "monkey-tools-vllm.selectorLabels" . | nindent 6 }}
      component: vllm-server
  template:
    metadata:
      annotations:
{{ include "monkey-tools-vllm.ud.annotations" . | indent 8 }}
      labels:
{{- include "monkey-tools-vllm.selectorLabels" . | nindent 8 }}
        component: vllm-server
{{ include "monkey-tools-vllm.ud.labels" . | indent 8 }}
    spec:
      enableServiceLinks: false
      {{- if .Values.images.vllmServer.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.images.vllmServer.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      containers:
        - image: "{{ .Values.images.vllmServer.repository }}:{{ .Values.images.vllmServer.tag }}"
          imagePullPolicy: "{{ .Values.images.vllmServer.pullPolicy }}"
          name: vllm-server
          ports:
            - name: http-server
              containerPort: 3000
              protocol: TCP
            - name: http-infer
              containerPort: 8000
              protocol: TCP
          env:
            {{- if .Values.vllmServer.extraEnv }}
              {{- toYaml .Values.vllmServer.extraEnv | nindent 14 }}
            {{- end }}
          resources:
            {{- toYaml .Values.vllmServer.resources | nindent 12 }}
          volumeMounts:
            - name: models-data
              mountPath: /root/code/models
              subPath: {{ .Values.vllmServer.persistence.persistentVolumeClaim.subPath }}
  volumeClaimTemplates:
    - metadata:
        name: models-data
      spec:
        accessModes:
          {{- toYaml .Values.vllmServer.persistence.persistentVolumeClaim.accessModes | nindent 10 }}
        resources:
          requests:
            storage: {{ .Values.vllmServer.persistence.persistentVolumeClaim.size }}
        {{- if .Values.vllmServer.persistence.persistentVolumeClaim.existingClaim }}
        volumeName: {{ .Values.vllmServer.persistence.persistentVolumeClaim.existingClaim }}
        {{- else }}
        {{- if .Values.vllmServer.persistence.persistentVolumeClaim.storageClass }}
        storageClassName: "{{ .Values.vllmServer.persistence.persistentVolumeClaim.storageClass }}"
        {{- end }}
        {{- end }}
